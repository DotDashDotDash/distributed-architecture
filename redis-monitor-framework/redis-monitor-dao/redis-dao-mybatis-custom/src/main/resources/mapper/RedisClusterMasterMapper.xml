<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.codwh.redis.custom.dao.IRedisClusterMasterDao">
    <resultMap id="RedisClusterMasterMap" type="org.codwh.redis.custom.model.redis.RedisClusterMaster">
        <result property="id" column="id"/>
        <result property="redisServerHost" column="redis_server_host"/>
        <result property="redisServerPort" column="redis_server_port"/>
        <result property="runnerStatus" column="runner_status"/>
        <result property="redisServerStatus" column="redis_server_status"/>
        <result property="createTime" column="create_time"/>
        <result property="version" column="version"/>
        <result property="operationStatus" column="oprate_status"/>
        <result property="zkPath" column="path"/>
    </resultMap>

    <insert id="insert" parameterType="org.codwh.redis.custom.model.redis.RedisClusterMaster">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO redis_cluster_master (
        <trim suffixOverrides=",">
            id,
            redis_server_host,
            redis_server_port,
            runner_status,
            redis_server_status,
            create_time,
            version,
            oprate_status,
            path,
        </trim>
        )VALUES(
        <trim suffixOverrides=",">
            #{id},
            #{redisServerHost},
            #{redisServerPort},
            #{runnerStatus},
            #{redisServerStatus},
            #{createTime},
            #{version},
            #{operationStatus},
            #{zkPath},
        </trim>
        )
    </insert>

    <update id="updateById" parameterType="org.codwh.redis.custom.model.redis.RedisClusterMaster">
        update redis_cluster_master
        <trim prefix="SET" suffixOverrides=",">
            <if test="id != null">id = #{id},</if>
            <if test="redisServerHost != null">redis_server_host = #{redisServerHost},</if>
            <if test="redisServerPort != null">redis_server_port = #{redisServerPort},</if>
            <if test="runnerStatus != null">runner_status = #{runnerStatus},</if>
            <if test="redisServerStatus != null">redis_server_status = #{redisServerStatus},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="version != null">version = #{version},</if>
            <if test="operationStatus != null">oprate_status = #{operationStatus},</if>
            <if test="zkPath != null">path = #{zkPath},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="int">
        delete
        from redis_cluster_master
        where id = #{id}
    </delete>

    <select id="getById" parameterType="int" resultMap="RedisClusterMasterMap">
        select *
        from redis_cluster_master
        where id = #{id}
    </select>

    <select id="getListByCriteria" resultMap="RedisClusterMasterMap"
            parameterType="org.codwh.redis.custom.model.redis.RedisClusterMaster">
        select * from redis_cluster_master
        <include refid="select_where_clause"/>
        order by id desc
    </select>

    <sql id="select_where_clause">
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="id != null">AND id = #{id}</if>
            <if test="redisServerHost != null">AND redis_server_host = #{redisServerHost}</if>
            <if test="redisServerPort != null">AND redis_server_port = #{redisServerPort}</if>
            <if test="runnerStatus != null">AND runner_status = #{runnerStatus}</if>
            <if test="redisServerStatus != null">AND redis_server_status = #{redisServerStatus}</if>
            <if test="createTime != null">AND create_time = #{createTime}</if>
            <if test="version != null">AND version = #{version}</if>
            <if test="operationStatus != null">AND oprate_status = #{operationStatus}</if>
            <if test="zkPath != null">path = #{zkPath}</if>
        </trim>
    </sql>

    <select id="queryPageList" resultMap="RedisClusterMasterMap">
        select * from redis_cluster_master
        <include refid="page_where_clause"/>
        order by id desc
        <if test="page!=null">
            LIMIT #{page.pageSize} OFFSET #{page.begin}
        </if>
    </select>

    <select id="count" resultType="int" parameterType="org.codwh.redis.custom.model.redis.RedisClusterMaster">
        select count(*) from redis_cluster_master
        <include refid="page_where_clause"/>
    </select>

    <sql id="page_where_clause">
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="queryObject.id != null">AND id = #{queryObject.id}</if>
            <if test="queryObject.redisServerHost != null">AND redis_server_host = #{queryObject.redisServerHost}</if>
            <if test="queryObject.redisServerPort != null">AND redis_server_port = #{queryObject.redisServerPort}</if>
            <if test="queryObject.runnerStatus != null">AND runner_status = #{queryObject.runnerStatus}</if>
            <if test="queryObject.redisServerStatus != null">AND redis_server_status =
                #{queryObject.redisServerStatus}
            </if>
            <if test="queryObject.createTime != null">AND create_time = #{queryObject.createTime}</if>
            <if test="queryObject.version != null">AND version = #{queryObject.version}</if>
            <if test="queryObject.operationStatus != null">AND oprate_status = #{queryObject.operationStatus}</if>
            <if test="queryObject.zkPath != null">path = #{queryObject.zkPath}</if>

        </trim>
    </sql>

    <!--extension script-->
    <select id="getListByStatus" resultMap="RedisClusterMasterMap">
        select *
        from redis_cluster_master
        where redis_server_status = 2
          and oprate_status = 1
          and runner_status = 1
        order by id asc
        LIMIT 0 ,50
    </select>

    <!--乐观锁  -->
    <update id="updateVersionByIdAndVersion" parameterType="org.codwh.redis.custom.model.redis.RedisClusterMaster">
        update redis_cluster_master
        set version       = #{version} + 1,
            oprate_status = #{operationStatus}
        where id = #{id}
          and version = #{version}
    </update>
</mapper>